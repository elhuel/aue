version: '3.8'

services:
  auth-db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
      POSTGRES_DB: auth_db
    volumes:
      - auth-db-data:/var/lib/postgresql/data
      - ./auth-service/migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  auth-service:
    build:
      context: ./auth-service
    env_file:
      - .env
    ports:
      - "8081:8080"  
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  booking-service:
    build:
      context: ./backend  
    environment:
      DB_HOST: auth-db
      DB_PORT: 5432        
      DB_USER: auth_user        
      DB_PASSWORD: auth_pass       
      DB_NAME: auth_db              
      AUTH_SERVICE_URL: http://auth-service:8080
    ports:
      - "8080:8080"
    depends_on:
      - auth-db  
      - auth-service
    networks:
      - app-network

volumes:
  auth-db-data:

networks:
  app-network:
    driver: bridge